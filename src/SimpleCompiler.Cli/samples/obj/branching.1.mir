Edges:
  BB0 => BB1
  BB0 => BB2
  BB2 => BB3
  BB2 => BB4
  BB1 => BB5
  BB3 => BB5
  BB4 => BB5

BB0:
  L_1CB3A6F_print₁ = nil
  L_1CB3A6F_print₂ = $print
  # samples/branching.lua 1,1:1,8
  L_302F24_a₁ = nil
  # samples/branching.lua 3,8:3,9
  t₁ = 2
  # samples/branching.lua 3,4:3,9
  t₂ = mod L_302F24_a₁, t₁
  # samples/branching.lua 3,13:3,14
  t₃ = 0
  # samples/branching.lua 3,4:3,14
  t₄ = eq t₂, t₃
  # samples/branching.lua 3,4:3,14
  br BB1 if t₄ else BB2

BB1:
  # samples/branching.lua 4,9:4,10
  t₅ = 3
  # samples/branching.lua 4,5:4,10
  L_302F24_a₂ = t₅
  br BB5

BB2:
  L_302F24_a₃ = L_302F24_a₁
  # samples/branching.lua 5,12:5,13
  t₆ = 3
  # samples/branching.lua 5,8:5,13
  t₇ = mod L_302F24_a₃, t₆
  # samples/branching.lua 5,17:5,18
  t₈ = 0
  # samples/branching.lua 5,8:5,18
  t₉ = eq t₇, t₈
  # samples/branching.lua 5,8:5,18
  br BB3 if t₉ else BB4

BB3:
  # samples/branching.lua 6,9:6,10
  t₁₀ = 5
  # samples/branching.lua 6,5:6,10
  L_302F24_a₄ = t₁₀
  br BB5

BB4:
  # samples/branching.lua 8,9:8,10
  t₁₁ = 7
  # samples/branching.lua 8,5:8,10
  L_302F24_a₅ = t₁₁
  br BB5

BB5:
  L_1CB3A6F_print₃ = L_1CB3A6F_print₂
  L_302F24_a₆ = ϕ([BB1: L_302F24_a₂], [BB3: L_302F24_a₄], [BB4: L_302F24_a₅])
  # samples/branching.lua 11,1:11,9
  t₁₂ = L_1CB3A6F_print₃(L_302F24_a₆)

