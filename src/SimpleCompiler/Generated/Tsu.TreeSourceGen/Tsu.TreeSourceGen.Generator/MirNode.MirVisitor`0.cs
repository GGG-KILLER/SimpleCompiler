// <auto-generated/>

#nullable enable

using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;

namespace SimpleCompiler.MIR
{
    interface IMirVisitor
    {
        void VisitAssignment(SimpleCompiler.MIR.Assignment assignment);
        void VisitBinaryOperation(SimpleCompiler.MIR.BinaryOperation binaryOperation);
        void VisitConstant(SimpleCompiler.MIR.Constant constant);
        void VisitDiscard(SimpleCompiler.MIR.Discard discard);
        void VisitExpressionStatement(SimpleCompiler.MIR.ExpressionStatement expressionStatement);
        void VisitFunctionCall(SimpleCompiler.MIR.FunctionCall functionCall);
        void VisitEmptyStatement(SimpleCompiler.MIR.EmptyStatement emptyStatement);
        void VisitStatementList(SimpleCompiler.MIR.StatementList statementList);
        void VisitUnaryOperation(SimpleCompiler.MIR.UnaryOperation unaryOperation);
        void VisitVariable(SimpleCompiler.MIR.Variable variable);
    }
    
    partial class MirVisitor : IMirVisitor 
    {
        public virtual void Visit(SimpleCompiler.MIR.MirNode node)
        {
            if (node is not null)
                node.Accept(this);
        }
        
        protected virtual void DefaultVisit(SimpleCompiler.MIR.MirNode node)
        {
        }
        
        public virtual void VisitAssignment(SimpleCompiler.MIR.Assignment assignment) => DefaultVisit(assignment);
        
        public virtual void VisitBinaryOperation(SimpleCompiler.MIR.BinaryOperation binaryOperation) => DefaultVisit(binaryOperation);
        
        public virtual void VisitConstant(SimpleCompiler.MIR.Constant constant) => DefaultVisit(constant);
        
        public virtual void VisitDiscard(SimpleCompiler.MIR.Discard discard) => DefaultVisit(discard);
        
        public virtual void VisitExpressionStatement(SimpleCompiler.MIR.ExpressionStatement expressionStatement) => DefaultVisit(expressionStatement);
        
        public virtual void VisitFunctionCall(SimpleCompiler.MIR.FunctionCall functionCall) => DefaultVisit(functionCall);
        
        public virtual void VisitEmptyStatement(SimpleCompiler.MIR.EmptyStatement emptyStatement) => DefaultVisit(emptyStatement);
        
        public virtual void VisitStatementList(SimpleCompiler.MIR.StatementList statementList) => DefaultVisit(statementList);
        
        public virtual void VisitUnaryOperation(SimpleCompiler.MIR.UnaryOperation unaryOperation) => DefaultVisit(unaryOperation);
        
        public virtual void VisitVariable(SimpleCompiler.MIR.Variable variable) => DefaultVisit(variable);
    }
}
