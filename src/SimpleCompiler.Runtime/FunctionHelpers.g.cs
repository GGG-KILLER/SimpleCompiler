// <auto-generated />

namespace SimpleCompiler.Runtime;

public static partial class FunctionHelper
{
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        rest = args.Length > 1 ? args[1..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        rest = args.Length > 2 ? args[2..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        rest = args.Length > 3 ? args[3..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out LuaValue arg4, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        arg4 = args.Length > 3 ? args[3] : LuaValue.Nil;
        rest = args.Length > 4 ? args[4..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out LuaValue arg4, out LuaValue arg5, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        arg4 = args.Length > 3 ? args[3] : LuaValue.Nil;
        arg5 = args.Length > 4 ? args[4] : LuaValue.Nil;
        rest = args.Length > 5 ? args[5..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out LuaValue arg4, out LuaValue arg5, out LuaValue arg6, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        arg4 = args.Length > 3 ? args[3] : LuaValue.Nil;
        arg5 = args.Length > 4 ? args[4] : LuaValue.Nil;
        arg6 = args.Length > 5 ? args[5] : LuaValue.Nil;
        rest = args.Length > 6 ? args[6..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out LuaValue arg4, out LuaValue arg5, out LuaValue arg6, out LuaValue arg7, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        arg4 = args.Length > 3 ? args[3] : LuaValue.Nil;
        arg5 = args.Length > 4 ? args[4] : LuaValue.Nil;
        arg6 = args.Length > 5 ? args[5] : LuaValue.Nil;
        arg7 = args.Length > 6 ? args[6] : LuaValue.Nil;
        rest = args.Length > 7 ? args[7..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out LuaValue arg4, out LuaValue arg5, out LuaValue arg6, out LuaValue arg7, out LuaValue arg8, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        arg4 = args.Length > 3 ? args[3] : LuaValue.Nil;
        arg5 = args.Length > 4 ? args[4] : LuaValue.Nil;
        arg6 = args.Length > 5 ? args[5] : LuaValue.Nil;
        arg7 = args.Length > 6 ? args[6] : LuaValue.Nil;
        arg8 = args.Length > 7 ? args[7] : LuaValue.Nil;
        rest = args.Length > 8 ? args[8..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out LuaValue arg4, out LuaValue arg5, out LuaValue arg6, out LuaValue arg7, out LuaValue arg8, out LuaValue arg9, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        arg4 = args.Length > 3 ? args[3] : LuaValue.Nil;
        arg5 = args.Length > 4 ? args[4] : LuaValue.Nil;
        arg6 = args.Length > 5 ? args[5] : LuaValue.Nil;
        arg7 = args.Length > 6 ? args[6] : LuaValue.Nil;
        arg8 = args.Length > 7 ? args[7] : LuaValue.Nil;
        arg9 = args.Length > 8 ? args[8] : LuaValue.Nil;
        rest = args.Length > 9 ? args[9..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out LuaValue arg4, out LuaValue arg5, out LuaValue arg6, out LuaValue arg7, out LuaValue arg8, out LuaValue arg9, out LuaValue arg10, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        arg4 = args.Length > 3 ? args[3] : LuaValue.Nil;
        arg5 = args.Length > 4 ? args[4] : LuaValue.Nil;
        arg6 = args.Length > 5 ? args[5] : LuaValue.Nil;
        arg7 = args.Length > 6 ? args[6] : LuaValue.Nil;
        arg8 = args.Length > 7 ? args[7] : LuaValue.Nil;
        arg9 = args.Length > 8 ? args[8] : LuaValue.Nil;
        arg10 = args.Length > 9 ? args[9] : LuaValue.Nil;
        rest = args.Length > 10 ? args[10..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out LuaValue arg4, out LuaValue arg5, out LuaValue arg6, out LuaValue arg7, out LuaValue arg8, out LuaValue arg9, out LuaValue arg10, out LuaValue arg11, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        arg4 = args.Length > 3 ? args[3] : LuaValue.Nil;
        arg5 = args.Length > 4 ? args[4] : LuaValue.Nil;
        arg6 = args.Length > 5 ? args[5] : LuaValue.Nil;
        arg7 = args.Length > 6 ? args[6] : LuaValue.Nil;
        arg8 = args.Length > 7 ? args[7] : LuaValue.Nil;
        arg9 = args.Length > 8 ? args[8] : LuaValue.Nil;
        arg10 = args.Length > 9 ? args[9] : LuaValue.Nil;
        arg11 = args.Length > 10 ? args[10] : LuaValue.Nil;
        rest = args.Length > 11 ? args[11..] : [];
    }
    public static void Deconstruct(ReadOnlySpan<LuaValue> args, out LuaValue arg1, out LuaValue arg2, out LuaValue arg3, out LuaValue arg4, out LuaValue arg5, out LuaValue arg6, out LuaValue arg7, out LuaValue arg8, out LuaValue arg9, out LuaValue arg10, out LuaValue arg11, out LuaValue arg12, out ReadOnlySpan<LuaValue> rest)
    {
        arg1 = args.Length > 0 ? args[0] : LuaValue.Nil;
        arg2 = args.Length > 1 ? args[1] : LuaValue.Nil;
        arg3 = args.Length > 2 ? args[2] : LuaValue.Nil;
        arg4 = args.Length > 3 ? args[3] : LuaValue.Nil;
        arg5 = args.Length > 4 ? args[4] : LuaValue.Nil;
        arg6 = args.Length > 5 ? args[5] : LuaValue.Nil;
        arg7 = args.Length > 6 ? args[6] : LuaValue.Nil;
        arg8 = args.Length > 7 ? args[7] : LuaValue.Nil;
        arg9 = args.Length > 8 ? args[8] : LuaValue.Nil;
        arg10 = args.Length > 9 ? args[9] : LuaValue.Nil;
        arg11 = args.Length > 10 ? args[10] : LuaValue.Nil;
        arg12 = args.Length > 11 ? args[11] : LuaValue.Nil;
        rest = args.Length > 12 ? args[12..] : [];
    }
}